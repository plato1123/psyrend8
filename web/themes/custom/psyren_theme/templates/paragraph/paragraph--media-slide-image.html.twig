{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *  
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag  for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
    set classes = [
        'paragraph',
        'paragraph--type--' ~ paragraph.bundle|clean_class,
        view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    ]
%}
{% block paragraph %}
    <div{{ attributes.addClass(classes) }}>
        {% block content %}
            <div  {% if content.field_entire_slide_clickable_go_[0] %} 
                onclick="location.href='{{ paragraph.field_entire_slide_clickable_go_.value }}';" 
                {% endif %}        
                class="media-carousel-container swappable-background" 
                data-background-default="{{  file_url(content.field_media_slide_image[0]["#item"].entity.uri.value) }}" 
                data-background-mobile="{{  file_url(content.field_media_slide_image_mobile[0]["#item"].entity.uri.value) }}"
                data-background-desktop="{{  file_url(content.field_media_slide_image[0]["#item"].entity.uri.value) }}"
                style="background:url({{  file_url(content.field_media_slide_image[0]["#item"].entity.uri.value) }});"
            >
                <div class="media-carousel-bar container no-padding">
                    <div class="media-carousel-bar-row">
                        <div class="col-md-10 {% if paragraph.field_slider_text_justify.0.value == "left" %} text-justify-left {% endif %} {% if paragraph.field_slider_text_justify.0.value == "center" %} text-justify-center {% endif %} {% if paragraph.field_slider_text_justify.0.value == "center-justify" %} text-justify-center-justify  {% endif %}{% if paragraph.field_slider_text_justify.0.value == "right" %} text-justify-right {% endif %}">
                            <h1>{{ content.field_headling_text }}</h1
                            {{ content.field_media_slide_supporting_tex }}
                            {% for key, item in content.field_cta_button if key|first != '#' %}
                                <a href="{{ item["#url"] }}" class="btn btn-primary btn-lg">
                                    {{ item["#title"]}}
                                </a>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        {% endblock %}
    </div>
{% endblock paragraph %}
